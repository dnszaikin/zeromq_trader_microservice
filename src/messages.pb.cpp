// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class user_registeredDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user_registered>
      _instance;
} _user_registered_default_instance_;
class user_renamedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user_renamed>
      _instance;
} _user_renamed_default_instance_;
class user_deal_wonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user_deal_won>
      _instance;
} _user_deal_won_default_instance_;
class user_connectedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user_connected>
      _instance;
} _user_connected_default_instance_;
class user_disconnectedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user_disconnected>
      _instance;
} _user_disconnected_default_instance_;
class wrapper_messageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<wrapper_message>
      _instance;
  const ::user_registered* user_registered_msg_;
  const ::user_renamed* user_renamed_msg_;
  const ::user_deal_won* user_deal_won_msg_;
  const ::user_connected* user_connected_msg_;
  const ::user_disconnected* user_disconnected_msg_;
} _wrapper_message_default_instance_;
namespace protobuf_messages_2eproto {
void InitDefaultsuser_registeredImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_user_registered_default_instance_;
    new (ptr) ::user_registered();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::user_registered::InitAsDefaultInstance();
}

void InitDefaultsuser_registered() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsuser_registeredImpl);
}

void InitDefaultsuser_renamedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_user_renamed_default_instance_;
    new (ptr) ::user_renamed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::user_renamed::InitAsDefaultInstance();
}

void InitDefaultsuser_renamed() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsuser_renamedImpl);
}

void InitDefaultsuser_deal_wonImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_user_deal_won_default_instance_;
    new (ptr) ::user_deal_won();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::user_deal_won::InitAsDefaultInstance();
}

void InitDefaultsuser_deal_won() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsuser_deal_wonImpl);
}

void InitDefaultsuser_connectedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_user_connected_default_instance_;
    new (ptr) ::user_connected();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::user_connected::InitAsDefaultInstance();
}

void InitDefaultsuser_connected() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsuser_connectedImpl);
}

void InitDefaultsuser_disconnectedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_user_disconnected_default_instance_;
    new (ptr) ::user_disconnected();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::user_disconnected::InitAsDefaultInstance();
}

void InitDefaultsuser_disconnected() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsuser_disconnectedImpl);
}

void InitDefaultswrapper_messageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messages_2eproto::InitDefaultsuser_registered();
  protobuf_messages_2eproto::InitDefaultsuser_renamed();
  protobuf_messages_2eproto::InitDefaultsuser_deal_won();
  protobuf_messages_2eproto::InitDefaultsuser_connected();
  protobuf_messages_2eproto::InitDefaultsuser_disconnected();
  {
    void* ptr = &::_wrapper_message_default_instance_;
    new (ptr) ::wrapper_message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::wrapper_message::InitAsDefaultInstance();
}

void InitDefaultswrapper_message() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultswrapper_messageImpl);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_registered, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_registered, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_registered, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_registered, name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_renamed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_renamed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_renamed, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_renamed, name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_deal_won, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_deal_won, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_deal_won, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_deal_won, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_deal_won, amount_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_connected, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_connected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_connected, user_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_disconnected, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_disconnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_disconnected, user_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::wrapper_message, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::wrapper_message, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::wrapper_message, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::wrapper_messageDefaultTypeInternal, user_registered_msg_),
  offsetof(::wrapper_messageDefaultTypeInternal, user_renamed_msg_),
  offsetof(::wrapper_messageDefaultTypeInternal, user_deal_won_msg_),
  offsetof(::wrapper_messageDefaultTypeInternal, user_connected_msg_),
  offsetof(::wrapper_messageDefaultTypeInternal, user_disconnected_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::wrapper_message, msg_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::user_registered)},
  { 9, 16, sizeof(::user_renamed)},
  { 18, 26, sizeof(::user_deal_won)},
  { 29, 35, sizeof(::user_connected)},
  { 36, 42, sizeof(::user_disconnected)},
  { 43, 54, sizeof(::wrapper_message)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_user_registered_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_user_renamed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_user_deal_won_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_user_connected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_user_disconnected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_wrapper_message_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "messages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016messages.proto\"0\n\017user_registered\022\017\n\007u"
      "ser_id\030\001 \002(\004\022\014\n\004name\030\002 \002(\t\"-\n\014user_renam"
      "ed\022\017\n\007user_id\030\001 \002(\004\022\014\n\004name\030\002 \002(\t\">\n\ruse"
      "r_deal_won\022\017\n\007user_id\030\001 \002(\004\022\014\n\004time\030\002 \002("
      "\t\022\016\n\006amount\030\003 \002(\003\"!\n\016user_connected\022\017\n\007u"
      "ser_id\030\001 \002(\004\"$\n\021user_disconnected\022\017\n\007use"
      "r_id\030\002 \002(\004\"\205\002\n\017wrapper_message\022/\n\023user_r"
      "egistered_msg\030\001 \001(\0132\020.user_registeredH\000\022"
      ")\n\020user_renamed_msg\030\002 \001(\0132\r.user_renamed"
      "H\000\022+\n\021user_deal_won_msg\030\003 \001(\0132\016.user_dea"
      "l_wonH\000\022-\n\022user_connected_msg\030\004 \001(\0132\017.us"
      "er_connectedH\000\0223\n\025user_disconnected_msg\030"
      "3 \001(\0132\022.user_disconnectedH\000B\005\n\003msg"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 514);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_2eproto

// ===================================================================

void user_registered::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user_registered::kUserIdFieldNumber;
const int user_registered::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user_registered::user_registered()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messages_2eproto::InitDefaultsuser_registered();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:user_registered)
}
user_registered::user_registered(const user_registered& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:user_registered)
}

void user_registered::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = GOOGLE_ULONGLONG(0);
}

user_registered::~user_registered() {
  // @@protoc_insertion_point(destructor:user_registered)
  SharedDtor();
}

void user_registered::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void user_registered::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* user_registered::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const user_registered& user_registered::default_instance() {
  ::protobuf_messages_2eproto::InitDefaultsuser_registered();
  return *internal_default_instance();
}

user_registered* user_registered::New(::google::protobuf::Arena* arena) const {
  user_registered* n = new user_registered;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void user_registered::Clear() {
// @@protoc_insertion_point(message_clear_start:user_registered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  user_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool user_registered::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:user_registered)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "user_registered.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:user_registered)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:user_registered)
  return false;
#undef DO_
}

void user_registered::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:user_registered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 user_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_registered.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:user_registered)
}

::google::protobuf::uint8* user_registered::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:user_registered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 user_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_registered.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:user_registered)
  return target;
}

size_t user_registered::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:user_registered)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_user_id()) {
    // required uint64 user_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  return total_size;
}
size_t user_registered::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:user_registered)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint64 user_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void user_registered::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:user_registered)
  GOOGLE_DCHECK_NE(&from, this);
  const user_registered* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const user_registered>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:user_registered)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:user_registered)
    MergeFrom(*source);
  }
}

void user_registered::MergeFrom(const user_registered& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:user_registered)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      user_id_ = from.user_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void user_registered::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:user_registered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_registered::CopyFrom(const user_registered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:user_registered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_registered::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void user_registered::Swap(user_registered* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user_registered::InternalSwap(user_registered* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(user_id_, other->user_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata user_registered::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void user_renamed::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user_renamed::kUserIdFieldNumber;
const int user_renamed::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user_renamed::user_renamed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messages_2eproto::InitDefaultsuser_renamed();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:user_renamed)
}
user_renamed::user_renamed(const user_renamed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:user_renamed)
}

void user_renamed::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = GOOGLE_ULONGLONG(0);
}

user_renamed::~user_renamed() {
  // @@protoc_insertion_point(destructor:user_renamed)
  SharedDtor();
}

void user_renamed::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void user_renamed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* user_renamed::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const user_renamed& user_renamed::default_instance() {
  ::protobuf_messages_2eproto::InitDefaultsuser_renamed();
  return *internal_default_instance();
}

user_renamed* user_renamed::New(::google::protobuf::Arena* arena) const {
  user_renamed* n = new user_renamed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void user_renamed::Clear() {
// @@protoc_insertion_point(message_clear_start:user_renamed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  user_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool user_renamed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:user_renamed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "user_renamed.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:user_renamed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:user_renamed)
  return false;
#undef DO_
}

void user_renamed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:user_renamed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 user_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_renamed.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:user_renamed)
}

::google::protobuf::uint8* user_renamed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:user_renamed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 user_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_renamed.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:user_renamed)
  return target;
}

size_t user_renamed::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:user_renamed)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_user_id()) {
    // required uint64 user_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  return total_size;
}
size_t user_renamed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:user_renamed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint64 user_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void user_renamed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:user_renamed)
  GOOGLE_DCHECK_NE(&from, this);
  const user_renamed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const user_renamed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:user_renamed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:user_renamed)
    MergeFrom(*source);
  }
}

void user_renamed::MergeFrom(const user_renamed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:user_renamed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      user_id_ = from.user_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void user_renamed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:user_renamed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_renamed::CopyFrom(const user_renamed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:user_renamed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_renamed::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void user_renamed::Swap(user_renamed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user_renamed::InternalSwap(user_renamed* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(user_id_, other->user_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata user_renamed::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void user_deal_won::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user_deal_won::kUserIdFieldNumber;
const int user_deal_won::kTimeFieldNumber;
const int user_deal_won::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user_deal_won::user_deal_won()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messages_2eproto::InitDefaultsuser_deal_won();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:user_deal_won)
}
user_deal_won::user_deal_won(const user_deal_won& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_time()) {
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(amount_));
  // @@protoc_insertion_point(copy_constructor:user_deal_won)
}

void user_deal_won::SharedCtor() {
  _cached_size_ = 0;
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(amount_));
}

user_deal_won::~user_deal_won() {
  // @@protoc_insertion_point(destructor:user_deal_won)
  SharedDtor();
}

void user_deal_won::SharedDtor() {
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void user_deal_won::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* user_deal_won::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const user_deal_won& user_deal_won::default_instance() {
  ::protobuf_messages_2eproto::InitDefaultsuser_deal_won();
  return *internal_default_instance();
}

user_deal_won* user_deal_won::New(::google::protobuf::Arena* arena) const {
  user_deal_won* n = new user_deal_won;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void user_deal_won::Clear() {
// @@protoc_insertion_point(message_clear_start:user_deal_won)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!time_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*time_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&user_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&amount_) -
        reinterpret_cast<char*>(&user_id_)) + sizeof(amount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool user_deal_won::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:user_deal_won)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), static_cast<int>(this->time().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "user_deal_won.time");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:user_deal_won)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:user_deal_won)
  return false;
#undef DO_
}

void user_deal_won::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:user_deal_won)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 user_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // required string time = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_deal_won.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->time(), output);
  }

  // required int64 amount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:user_deal_won)
}

::google::protobuf::uint8* user_deal_won::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:user_deal_won)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 user_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // required string time = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_deal_won.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->time(), target);
  }

  // required int64 amount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:user_deal_won)
  return target;
}

size_t user_deal_won::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:user_deal_won)
  size_t total_size = 0;

  if (has_time()) {
    // required string time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  if (has_user_id()) {
    // required uint64 user_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  if (has_amount()) {
    // required int64 amount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  return total_size;
}
size_t user_deal_won::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:user_deal_won)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());

    // required uint64 user_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());

    // required int64 amount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void user_deal_won::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:user_deal_won)
  GOOGLE_DCHECK_NE(&from, this);
  const user_deal_won* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const user_deal_won>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:user_deal_won)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:user_deal_won)
    MergeFrom(*source);
  }
}

void user_deal_won::MergeFrom(const user_deal_won& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:user_deal_won)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_time();
      time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
    }
    if (cached_has_bits & 0x00000002u) {
      user_id_ = from.user_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void user_deal_won::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:user_deal_won)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_deal_won::CopyFrom(const user_deal_won& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:user_deal_won)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_deal_won::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void user_deal_won::Swap(user_deal_won* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user_deal_won::InternalSwap(user_deal_won* other) {
  using std::swap;
  time_.Swap(&other->time_);
  swap(user_id_, other->user_id_);
  swap(amount_, other->amount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata user_deal_won::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void user_connected::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user_connected::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user_connected::user_connected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messages_2eproto::InitDefaultsuser_connected();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:user_connected)
}
user_connected::user_connected(const user_connected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:user_connected)
}

void user_connected::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = GOOGLE_ULONGLONG(0);
}

user_connected::~user_connected() {
  // @@protoc_insertion_point(destructor:user_connected)
  SharedDtor();
}

void user_connected::SharedDtor() {
}

void user_connected::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* user_connected::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const user_connected& user_connected::default_instance() {
  ::protobuf_messages_2eproto::InitDefaultsuser_connected();
  return *internal_default_instance();
}

user_connected* user_connected::New(::google::protobuf::Arena* arena) const {
  user_connected* n = new user_connected;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void user_connected::Clear() {
// @@protoc_insertion_point(message_clear_start:user_connected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool user_connected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:user_connected)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:user_connected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:user_connected)
  return false;
#undef DO_
}

void user_connected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:user_connected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 user_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:user_connected)
}

::google::protobuf::uint8* user_connected::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:user_connected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 user_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:user_connected)
  return target;
}

size_t user_connected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:user_connected)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 user_id = 1;
  if (has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void user_connected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:user_connected)
  GOOGLE_DCHECK_NE(&from, this);
  const user_connected* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const user_connected>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:user_connected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:user_connected)
    MergeFrom(*source);
  }
}

void user_connected::MergeFrom(const user_connected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:user_connected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user_id()) {
    set_user_id(from.user_id());
  }
}

void user_connected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:user_connected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_connected::CopyFrom(const user_connected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:user_connected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_connected::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void user_connected::Swap(user_connected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user_connected::InternalSwap(user_connected* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata user_connected::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void user_disconnected::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user_disconnected::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user_disconnected::user_disconnected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messages_2eproto::InitDefaultsuser_disconnected();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:user_disconnected)
}
user_disconnected::user_disconnected(const user_disconnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:user_disconnected)
}

void user_disconnected::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = GOOGLE_ULONGLONG(0);
}

user_disconnected::~user_disconnected() {
  // @@protoc_insertion_point(destructor:user_disconnected)
  SharedDtor();
}

void user_disconnected::SharedDtor() {
}

void user_disconnected::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* user_disconnected::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const user_disconnected& user_disconnected::default_instance() {
  ::protobuf_messages_2eproto::InitDefaultsuser_disconnected();
  return *internal_default_instance();
}

user_disconnected* user_disconnected::New(::google::protobuf::Arena* arena) const {
  user_disconnected* n = new user_disconnected;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void user_disconnected::Clear() {
// @@protoc_insertion_point(message_clear_start:user_disconnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool user_disconnected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:user_disconnected)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:user_disconnected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:user_disconnected)
  return false;
#undef DO_
}

void user_disconnected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:user_disconnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 user_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:user_disconnected)
}

::google::protobuf::uint8* user_disconnected::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:user_disconnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 user_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:user_disconnected)
  return target;
}

size_t user_disconnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:user_disconnected)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 user_id = 2;
  if (has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void user_disconnected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:user_disconnected)
  GOOGLE_DCHECK_NE(&from, this);
  const user_disconnected* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const user_disconnected>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:user_disconnected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:user_disconnected)
    MergeFrom(*source);
  }
}

void user_disconnected::MergeFrom(const user_disconnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:user_disconnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user_id()) {
    set_user_id(from.user_id());
  }
}

void user_disconnected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:user_disconnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_disconnected::CopyFrom(const user_disconnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:user_disconnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_disconnected::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void user_disconnected::Swap(user_disconnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user_disconnected::InternalSwap(user_disconnected* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata user_disconnected::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void wrapper_message::InitAsDefaultInstance() {
  ::_wrapper_message_default_instance_.user_registered_msg_ = const_cast< ::user_registered*>(
      ::user_registered::internal_default_instance());
  ::_wrapper_message_default_instance_.user_renamed_msg_ = const_cast< ::user_renamed*>(
      ::user_renamed::internal_default_instance());
  ::_wrapper_message_default_instance_.user_deal_won_msg_ = const_cast< ::user_deal_won*>(
      ::user_deal_won::internal_default_instance());
  ::_wrapper_message_default_instance_.user_connected_msg_ = const_cast< ::user_connected*>(
      ::user_connected::internal_default_instance());
  ::_wrapper_message_default_instance_.user_disconnected_msg_ = const_cast< ::user_disconnected*>(
      ::user_disconnected::internal_default_instance());
}
void wrapper_message::set_allocated_user_registered_msg(::user_registered* user_registered_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (user_registered_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_registered_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_registered_msg, submessage_arena);
    }
    set_has_user_registered_msg();
    msg_.user_registered_msg_ = user_registered_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:wrapper_message.user_registered_msg)
}
void wrapper_message::set_allocated_user_renamed_msg(::user_renamed* user_renamed_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (user_renamed_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_renamed_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_renamed_msg, submessage_arena);
    }
    set_has_user_renamed_msg();
    msg_.user_renamed_msg_ = user_renamed_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:wrapper_message.user_renamed_msg)
}
void wrapper_message::set_allocated_user_deal_won_msg(::user_deal_won* user_deal_won_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (user_deal_won_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_deal_won_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_deal_won_msg, submessage_arena);
    }
    set_has_user_deal_won_msg();
    msg_.user_deal_won_msg_ = user_deal_won_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:wrapper_message.user_deal_won_msg)
}
void wrapper_message::set_allocated_user_connected_msg(::user_connected* user_connected_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (user_connected_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_connected_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_connected_msg, submessage_arena);
    }
    set_has_user_connected_msg();
    msg_.user_connected_msg_ = user_connected_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:wrapper_message.user_connected_msg)
}
void wrapper_message::set_allocated_user_disconnected_msg(::user_disconnected* user_disconnected_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (user_disconnected_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_disconnected_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_disconnected_msg, submessage_arena);
    }
    set_has_user_disconnected_msg();
    msg_.user_disconnected_msg_ = user_disconnected_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:wrapper_message.user_disconnected_msg)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int wrapper_message::kUserRegisteredMsgFieldNumber;
const int wrapper_message::kUserRenamedMsgFieldNumber;
const int wrapper_message::kUserDealWonMsgFieldNumber;
const int wrapper_message::kUserConnectedMsgFieldNumber;
const int wrapper_message::kUserDisconnectedMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

wrapper_message::wrapper_message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messages_2eproto::InitDefaultswrapper_message();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:wrapper_message)
}
wrapper_message::wrapper_message(const wrapper_message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_msg();
  switch (from.msg_case()) {
    case kUserRegisteredMsg: {
      mutable_user_registered_msg()->::user_registered::MergeFrom(from.user_registered_msg());
      break;
    }
    case kUserRenamedMsg: {
      mutable_user_renamed_msg()->::user_renamed::MergeFrom(from.user_renamed_msg());
      break;
    }
    case kUserDealWonMsg: {
      mutable_user_deal_won_msg()->::user_deal_won::MergeFrom(from.user_deal_won_msg());
      break;
    }
    case kUserConnectedMsg: {
      mutable_user_connected_msg()->::user_connected::MergeFrom(from.user_connected_msg());
      break;
    }
    case kUserDisconnectedMsg: {
      mutable_user_disconnected_msg()->::user_disconnected::MergeFrom(from.user_disconnected_msg());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:wrapper_message)
}

void wrapper_message::SharedCtor() {
  _cached_size_ = 0;
  clear_has_msg();
}

wrapper_message::~wrapper_message() {
  // @@protoc_insertion_point(destructor:wrapper_message)
  SharedDtor();
}

void wrapper_message::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void wrapper_message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* wrapper_message::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const wrapper_message& wrapper_message::default_instance() {
  ::protobuf_messages_2eproto::InitDefaultswrapper_message();
  return *internal_default_instance();
}

wrapper_message* wrapper_message::New(::google::protobuf::Arena* arena) const {
  wrapper_message* n = new wrapper_message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void wrapper_message::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:wrapper_message)
  switch (msg_case()) {
    case kUserRegisteredMsg: {
      delete msg_.user_registered_msg_;
      break;
    }
    case kUserRenamedMsg: {
      delete msg_.user_renamed_msg_;
      break;
    }
    case kUserDealWonMsg: {
      delete msg_.user_deal_won_msg_;
      break;
    }
    case kUserConnectedMsg: {
      delete msg_.user_connected_msg_;
      break;
    }
    case kUserDisconnectedMsg: {
      delete msg_.user_disconnected_msg_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void wrapper_message::Clear() {
// @@protoc_insertion_point(message_clear_start:wrapper_message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool wrapper_message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:wrapper_message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .user_registered user_registered_msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_registered_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .user_renamed user_renamed_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_renamed_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .user_deal_won user_deal_won_msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_deal_won_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .user_connected user_connected_msg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_connected_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .user_disconnected user_disconnected_msg = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_disconnected_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:wrapper_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:wrapper_message)
  return false;
#undef DO_
}

void wrapper_message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:wrapper_message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (msg_case()) {
    case kUserRegisteredMsg:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, *msg_.user_registered_msg_, output);
      break;
    case kUserRenamedMsg:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, *msg_.user_renamed_msg_, output);
      break;
    case kUserDealWonMsg:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, *msg_.user_deal_won_msg_, output);
      break;
    case kUserConnectedMsg:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, *msg_.user_connected_msg_, output);
      break;
    case kUserDisconnectedMsg:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        51, *msg_.user_disconnected_msg_, output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:wrapper_message)
}

::google::protobuf::uint8* wrapper_message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:wrapper_message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (msg_case()) {
    case kUserRegisteredMsg:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, *msg_.user_registered_msg_, deterministic, target);
      break;
    case kUserRenamedMsg:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, *msg_.user_renamed_msg_, deterministic, target);
      break;
    case kUserDealWonMsg:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, *msg_.user_deal_won_msg_, deterministic, target);
      break;
    case kUserConnectedMsg:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, *msg_.user_connected_msg_, deterministic, target);
      break;
    case kUserDisconnectedMsg:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          51, *msg_.user_disconnected_msg_, deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wrapper_message)
  return target;
}

size_t wrapper_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wrapper_message)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (msg_case()) {
    // optional .user_registered user_registered_msg = 1;
    case kUserRegisteredMsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.user_registered_msg_);
      break;
    }
    // optional .user_renamed user_renamed_msg = 2;
    case kUserRenamedMsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.user_renamed_msg_);
      break;
    }
    // optional .user_deal_won user_deal_won_msg = 3;
    case kUserDealWonMsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.user_deal_won_msg_);
      break;
    }
    // optional .user_connected user_connected_msg = 4;
    case kUserConnectedMsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.user_connected_msg_);
      break;
    }
    // optional .user_disconnected user_disconnected_msg = 51;
    case kUserDisconnectedMsg: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.user_disconnected_msg_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void wrapper_message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:wrapper_message)
  GOOGLE_DCHECK_NE(&from, this);
  const wrapper_message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const wrapper_message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:wrapper_message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:wrapper_message)
    MergeFrom(*source);
  }
}

void wrapper_message::MergeFrom(const wrapper_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wrapper_message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_case()) {
    case kUserRegisteredMsg: {
      mutable_user_registered_msg()->::user_registered::MergeFrom(from.user_registered_msg());
      break;
    }
    case kUserRenamedMsg: {
      mutable_user_renamed_msg()->::user_renamed::MergeFrom(from.user_renamed_msg());
      break;
    }
    case kUserDealWonMsg: {
      mutable_user_deal_won_msg()->::user_deal_won::MergeFrom(from.user_deal_won_msg());
      break;
    }
    case kUserConnectedMsg: {
      mutable_user_connected_msg()->::user_connected::MergeFrom(from.user_connected_msg());
      break;
    }
    case kUserDisconnectedMsg: {
      mutable_user_disconnected_msg()->::user_disconnected::MergeFrom(from.user_disconnected_msg());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void wrapper_message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:wrapper_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void wrapper_message::CopyFrom(const wrapper_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wrapper_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool wrapper_message::IsInitialized() const {
  switch (msg_case()) {
    case kUserRegisteredMsg: {
      if (has_user_registered_msg()) {
        if (!this->user_registered_msg().IsInitialized()) return false;
      }
      break;
    }
    case kUserRenamedMsg: {
      if (has_user_renamed_msg()) {
        if (!this->user_renamed_msg().IsInitialized()) return false;
      }
      break;
    }
    case kUserDealWonMsg: {
      if (has_user_deal_won_msg()) {
        if (!this->user_deal_won_msg().IsInitialized()) return false;
      }
      break;
    }
    case kUserConnectedMsg: {
      if (has_user_connected_msg()) {
        if (!this->user_connected_msg().IsInitialized()) return false;
      }
      break;
    }
    case kUserDisconnectedMsg: {
      if (has_user_disconnected_msg()) {
        if (!this->user_disconnected_msg().IsInitialized()) return false;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  return true;
}

void wrapper_message::Swap(wrapper_message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void wrapper_message::InternalSwap(wrapper_message* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata wrapper_message::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
